<tool id="crossmap" name="CrossMap" version="0.2.2-0">
    <description>Convert genome coordinates or annotation files between genome assemblies</description>
    
    <requirements>
        <requirement type="package" version="324">ucsc-wigtobigwig</requirement>
        <requirement type="package" version="0.2.2">crossmap</requirement>
    </requirements>
    
    <stdio>
        <regex match="Aborted (core dumped)" source="stdout" level="fatal"/>
        <regex match=".*" source="both" level="log"/>
        <exit_code range="1:"/>
    </stdio>
    
    <version_command>CrossMap.py 2&gt;&amp;1 | head -n 1 | grep -E --only-matching 'CrossMap.*'</version_command>
    
    <command><![CDATA[
        CrossMap.py gff
            '${seq_source.input_chain}'
            '${seq_source.input}'
            
            #if str($include_fails) == "True"
            >
            #end if
            
            '${output}'
    ]]></command>

    <inputs>
        <conditional name="seq_source">
            <param name="index_source" type="select" label="Source for LiftOver Data (chain file)">
                <option value="cached">Local data (in galaxy)</option>
                <option value="history">From History</option>
            </param>

            <when value="cached">
                <param format="gtf,gff,gff3" name="input" type="data" label="GTF/GFF file">
                    <validator type="unspecified_build"/>
                    <!-- Gives error in tests
                    <validator type="dataset_metadata_in_file" filename="liftOver.loc" metadata_name="dbkey" metadata_column="0" message="LiftOver mapping (chain file) is not available for the specified build."/>
                    -->
                </param>
                <param name="input_chain" type="select" label="Lift Over To">
                    <options from_file="liftOver.loc">
                        <column name="name" index="1"/>
                        <column name="value" index="2"/>
                        <column name="dbkey" index="0"/>
                        <filter type="data_meta" ref="input" key="dbkey" column="0"/>
                    </options>
                </param>
            </when>
            <when value="history">
                <param type="data" format="gtf,gff,gff3" name="input"       label="GTF/GFF file"/>
                <param type="data" format="csv"          name="input_chain" label="LiftOver chain file"/>
            </when>
        </conditional>

        <param name="include_fails" type="boolean" truevalue="True" checked="false" falsevalue="False" label="Include failed liftovers" help="If a coordinate can not be lift over, do you want to include it in the output (it is still being marked 'fail')"/>
    </inputs>
    
    <outputs>
        <!-- GTF/GFF3? test... -->
        <data format="gff" name="output" label="${tool.name} on ${on_string}" />
    </outputs>
    
    <tests>
    <!-- GFF -->
        <test>
            <param name="input_format" value="gff"/>
            <param name="index_source" value="history"/>
            <param name="input" value="test_gff_01_input_a.gtf" ftype="gtf"/>
            <param name="input_chain" value="aToB.over.chain" ftype="csv"/>
            <param name="include_fails" value="False"/>
            
            <output name="output" file="test_gff_01_output_a__only-matches.gtf"/>
        </test>
        <test>
            <param name="input_format" value="gff"/>
            <param name="index_source" value="history"/>
            <param name="input" value="test_gff_01_input_a.gtf" ftype="gtf"/>
            <param name="input_chain" value="aToB.over.chain" ftype="csv"/>
            <param name="include_fails" value="True"/>
            
            <output name="output" file="test_gff_01_output_a__all.gtf"/>
        </test>
    </tests>
    <help>
CrossMap is versatile tool to convert genome coordinates or annotation files between genome
assemblies. It supports mostly commonly used file types, including BAM, BED,BigWig, GFF,
GTF, SAM, Wiggle, and VCF formats. For large plain text file types, such as BED, GFF, GTF
and VCF, reading from remote servers and file compression are supported.

CrossMap bed
------------
BED format file must have at least 3 columns (chrom, start, end) and no more than 12 columns.
BED format: http://genome.ucsc.edu/FAQ/FAQformat.html#format1
    </help>
    
    <citations>
        <citation type="doi">10.1093/bioinformatics/btt730</citation>
    </citations>
</tool>
